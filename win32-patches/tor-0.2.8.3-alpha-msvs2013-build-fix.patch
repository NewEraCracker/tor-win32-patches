--- a/Makefile.nmake
+++ b/Makefile.nmake
@@ -1,19 +1,53 @@
+# Default configuration is Release
+!IF "$(CFG)" == ""
+CFG=Release
+!ENDIF
+
+# Check user supplied configuration to see if it matches any build profile
+!IF "$(CFG)" != "Release" && "$(CFG)" != "Test"
+!MESSAGE Invalid configuration "$(CFG)" specified.
+!MESSAGE
+!MESSAGE You can specify a configuration when running NMAKE by defining
+!MESSAGE the macro CFG on the command line.
+!MESSAGE
+!MESSAGE The following configurations are available:
+!MESSAGE NMAKE /f "Makefile.nmake" all CFG="Release"
+!MESSAGE NMAKE /f "Makefile.nmake" all CFG="Test"
+!MESSAGE
+!MESSAGE To clean build tree the following configurations are available:
+!MESSAGE NMAKE /f "Makefile.nmake" clean CFG="Release"
+!MESSAGE NMAKE /f "Makefile.nmake" clean CFG="Test"
+!MESSAGE
+!MESSAGE You are advised to clean your build tree before building a
+!MESSAGE different profile.
+!MESSAGE
+!ERROR An invalid configuration is specified.
+!ENDIF
+
 all:
 	cd src/common
-	$(MAKE) /F Makefile.nmake
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
 	cd ../../src/ext
-	$(MAKE) /F Makefile.nmake
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
+	cd ../../src/trunnel
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
 	cd ../../src/or
-	$(MAKE) /F Makefile.nmake
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
 	cd ../../src/test
-	$(MAKE) /F Makefile.nmake
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
+	cd ../../src/tools
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
 
 clean:
 	cd src/common
-	$(MAKE) /F Makefile.nmake clean
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
 	cd ../../src/ext
-	$(MAKE) /F Makefile.nmake clean
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
+	cd ../../src/trunnel
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
 	cd ../../src/or
-	$(MAKE) /F Makefile.nmake clean
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
 	cd ../../src/test
-	$(MAKE) /F Makefile.nmake clean
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
+	cd ../../src/tools
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
--- a/src/common/Makefile.nmake
+++ b/src/common/Makefile.nmake
@@ -1,28 +1,43 @@
+# Sanity check
+!IF "$(CFG)" != "Release" && "$(CFG)" != "Test"
+!ERROR An invalid configuration is specified.
+!ENDIF
+
+# Release profile - Test suite disabled - Optimization enabled
+!IF "$(CFG)" == "Release"
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext /I ..\trunnel /I ..\ext\trunnel
+!ENDIF
+
+# Test profile - Test suite enabled - Optimization disabled
+!IF "$(CFG)" == "Test"
+CFLAGS = /nologo /MD /W3 /Od /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext /I ..\trunnel /I ..\ext\trunnel /D"TOR_UNIT_TESTS"
+!ENDIF
+
 all: libor.lib libor-crypto.lib libor-event.lib
 
-CFLAGS = /O2 /MT /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common \
-    /I ..\ext
+LIBOR_OBJECTS = address.obj backtrace.obj compat.obj container.obj di_ops.obj log.obj \
+	memarea.obj procmon.obj sandbox.obj util.obj util_format.obj util_process.obj \
+	workqueue.obj
 
-LIBOR_OBJECTS = address.obj backtrace.obj compat.obj container.obj di_ops.obj \
-	log.obj memarea.obj mempool.obj procmon.obj sandbox.obj util.obj \
-	util_codedigest.obj
+LIBOR_CRYPTO_OBJECTS = aes.obj torgzip.obj tortls.obj crypto.obj crypto_curve25519.obj \
+	crypto_ed25519.obj crypto_format.obj crypto_pwbox.obj crypto_s2k.obj
 
-LIBOR_CRYPTO_OBJECTS = aes.obj crypto.obj crypto_format.obj torgzip.obj tortls.obj \
-	crypto_curve25519.obj curve25519-donna.obj
+LIBOR_EVENT_OBJECTS = compat_libevent.obj compat_threads.obj compat_winthreads.obj
 
-LIBOR_EVENT_OBJECTS = compat_libevent.obj
+crypto_curve25519.obj: crypto_curve25519.c
+	$(CC) $(CFLAGS) /D ED25519_SUFFIX=_donna /D inline=_inline /c crypto_curve25519.c
 
-curve25519-donna.obj: ..\ext\curve25519_donna\curve25519-donna.c
-	$(CC) $(CFLAGS) /D inline=_inline /c ..\ext\curve25519_donna\curve25519-donna.c
+crypto_ed25519.obj: crypto_ed25519.c
+	$(CC) $(CFLAGS) /D ED25519_SUFFIX=_donna /D inline=_inline /c crypto_ed25519.c
 
 libor.lib: $(LIBOR_OBJECTS)
-	lib $(LIBOR_OBJECTS) /out:libor.lib
+	lib $(LIBOR_OBJECTS) /out:$@
 
 libor-crypto.lib: $(LIBOR_CRYPTO_OBJECTS)
-	lib $(LIBOR_CRYPTO_OBJECTS) /out:libor-crypto.lib
+	lib $(LIBOR_CRYPTO_OBJECTS) /out:$@
 
 libor-event.lib:  $(LIBOR_EVENT_OBJECTS)
-	lib $(LIBOR_EVENT_OBJECTS) /out:libor-event.lib
+	lib $(LIBOR_EVENT_OBJECTS) /out:$@
 
 clean:
-	del *.obj *.lib libor*.lib
+	del *.obj libor.lib libor-crypto.lib libor-event.lib
--- a/src/common/backtrace.c
+++ b/src/common/backtrace.c
@@ -18,8 +18,6 @@
 
 #include "orconfig.h"
 #include "compat.h"
-#include "util.h"
-#include "torlog.h"
 
 #ifdef HAVE_EXECINFO_H
 #include <execinfo.h>
@@ -33,6 +31,9 @@
 #ifdef HAVE_SIGNAL_H
 #include <signal.h>
 #endif
+
+#include "util.h"
+#include "torlog.h"
 
 #ifdef HAVE_CYGWIN_SIGNAL_H
 #include <cygwin/signal.h>
--- a/src/common/compat.c
+++ b/src/common/compat.c
@@ -27,6 +27,7 @@
 #include "compat.h"
 
 #ifdef _WIN32
+#include <io.h>
 #include <winsock2.h>
 #include <windows.h>
 #include <sys/locking.h>
--- a/src/common/compat_threads.c
+++ b/src/common/compat_threads.c
@@ -18,9 +18,9 @@
 #include "compat.h"
 #include "compat_threads.h"
 
-#include "util.h"
-#include "torlog.h"
-
+#ifdef _WIN32
+#include <io.h>
+#endif
 #ifdef HAVE_SYS_EVENTFD_H
 #include <sys/eventfd.h>
 #endif
@@ -30,6 +30,9 @@
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
+
+#include "util.h"
+#include "torlog.h"
 
 /** Return a newly allocated, ready-for-use mutex. */
 tor_mutex_t *
--- a/src/common/crypto.c
+++ b/src/common/crypto.c
@@ -22,6 +22,10 @@
 #undef OCSP_RESPONSE
 #endif
 
+#ifdef _MSC_VER
+#include <openssl/applink.c>
+#endif
+
 #define CRYPTO_PRIVATE
 #include "crypto.h"
 #include "compat_openssl.h"
--- a/src/common/log.c
+++ b/src/common/log.c
@@ -15,6 +15,9 @@
 // #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#ifdef _WIN32
+#include <io.h>
+#endif
 #ifdef HAVE_SYS_TIME_H
 #include <sys/time.h>
 #endif
--- a/src/common/torint.h
+++ b/src/common/torint.h
@@ -111,6 +111,16 @@
 typedef unsigned int uint32_t;
 #define HAVE_UINT32_T
 #endif
+
+#ifndef UINT8_MAX
+#define UINT8_MAX 0xffu
+#endif
+#ifndef INT8_MAX
+#define INT8_MAX 0x7f
+#endif
+#ifndef INT8_MIN
+#define INT8_MIN (-INT8_MAX-1)
+#endif
 #ifndef UINT16_MAX
 #define UINT16_MAX 0xffffu
 #endif
--- a/src/ext/Makefile.nmake
+++ b/src/ext/Makefile.nmake
@@ -0,0 +1,34 @@
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext
+
+all: build-libs build-deps
+
+build-libs: csiphash.lib tinytest.lib keccak-tiny.lib
+
+csiphash.lib: csiphash.obj
+	lib csiphash.obj /out:$@
+
+tinytest.lib: tinytest.obj
+	lib tinytest.obj /out:$@
+
+keccak-tiny.lib: keccak-tiny-unrolled.obj
+	lib keccak-tiny-unrolled.obj /out:$@
+
+keccak-tiny-unrolled.obj: ./keccak-tiny/keccak-tiny-unrolled.c
+	$(CC) $(CFLAGS) /c ./keccak-tiny/keccak-tiny-unrolled.c
+
+build-deps:
+	cd curve25519_donna
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
+	cd ../ed25519/ref10
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
+
+clean: clean-libs clean-deps
+
+clean-libs:
+	del *.obj *.lib
+
+clean-deps:
+	cd curve25519_donna
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
+	cd ../ed25519/ref10
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
\ No newline at end of file
--- a/src/ext/curve25519_donna/Makefile.nmake
+++ b/src/ext/curve25519_donna/Makefile.nmake
@@ -0,0 +1,15 @@
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\..\win32 /I ..\..\..\..\build-alpha\include /I ..\..\common
+
+all: curve25519-donna.lib
+
+curve25519-donna.obj: curve25519-donna.c
+	$(CC) $(CFLAGS) /D ED25519_SUFFIX=_donna /D inline=_inline /c curve25519-donna.c
+
+ed25519_tor.obj: ../ed25519/donna/ed25519_tor.c
+	$(CC) $(CFLAGS) /D ED25519_SUFFIX=_donna /D inline=_inline /c ../ed25519/donna/ed25519_tor.c
+
+curve25519-donna.lib: curve25519-donna.obj ed25519_tor.obj
+	lib curve25519-donna.obj ed25519_tor.obj /out:$@
+
+clean:
+	del *.obj *.lib
--- a/src/ext/ed25519/donna/ed25519_donna_tor.h
+++ b/src/ext/ed25519/donna/ed25519_donna_tor.h
@@ -2,6 +2,7 @@
 #ifndef SRC_EXT_ED25519_DONNA_H_INCLUDED_
 #define SRC_EXT_ED25519_DONNA_H_INCLUDED_
 #include <torint.h>
+#include <crypto.h>
 
 typedef unsigned char curved25519_key[32];
 
--- a/src/ext/ed25519/ref10/Makefile.nmake
+++ b/src/ext/ed25519/ref10/Makefile.nmake
@@ -0,0 +1,52 @@
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\..\..\win32 /I ..\..\..\..\..\build-alpha\include /I ..\..\..\common
+
+all: ed25519-ref10.lib
+
+ED25519_OBJECTS = \
+	fe_0.obj \
+	fe_1.obj \
+	fe_add.obj \
+	fe_cmov.obj \
+	fe_copy.obj \
+	fe_frombytes.obj \
+	fe_invert.obj \
+	fe_isnegative.obj \
+	fe_isnonzero.obj \
+	fe_mul.obj \
+	fe_neg.obj \
+	fe_pow22523.obj \
+	fe_sq.obj \
+	fe_sq2.obj \
+	fe_sub.obj \
+	fe_tobytes.obj \
+	ge_add.obj \
+	ge_double_scalarmult.obj \
+	ge_frombytes.obj \
+	ge_madd.obj \
+	ge_msub.obj \
+	ge_p1p1_to_p2.obj \
+	ge_p1p1_to_p3.obj \
+	ge_p2_0.obj \
+	ge_p2_dbl.obj \
+	ge_p3_0.obj \
+	ge_p3_dbl.obj \
+	ge_p3_to_cached.obj \
+	ge_p3_to_p2.obj \
+	ge_p3_tobytes.obj \
+	ge_precomp_0.obj \
+	ge_scalarmult_base.obj \
+	ge_sub.obj \
+	ge_tobytes.obj \
+	keypair.obj \
+	open.obj \
+	sc_muladd.obj \
+	sc_reduce.obj \
+	sign.obj \
+	keyconv.obj \
+	blinding.obj
+
+ed25519-ref10.lib: $(ED25519_OBJECTS)
+	lib $(ED25519_OBJECTS) /out:$@
+
+clean:
+	del *.obj *.lib
--- a/src/ext/tinytest.c
+++ b/src/ext/tinytest.c
@@ -56,6 +56,10 @@
 #define __attribute__(x)
 #endif
 
+#ifdef _MSC_VER
+#define snprintf _snprintf
+#endif
+
 #include "tinytest.h"
 #include "tinytest_macros.h"
 
--- a/src/ext/trunnel/trunnel-impl.h
+++ b/src/ext/trunnel/trunnel-impl.h
@@ -18,15 +18,7 @@
 #include "trunnel-local.h"
 #endif
 
-#if defined(_MSC_VER) && (_MSC_VER < 1600)
-#define uint8_t unsigned char
-#define uint16_t unsigned short
-#define uint32_t unsigned int
-#define uint64_t unsigned __int64
-#define inline __inline
-#else
-#include <stdint.h>
-#endif
+#include "torint.h"
 
 #ifdef _WIN32
 uint32_t trunnel_htonl(uint32_t a);
--- a/src/or/Makefile.nmake
+++ b/src/or/Makefile.nmake
@@ -1,15 +1,34 @@
-all: tor.exe
+# Sanity check
+!IF "$(CFG)" != "Release" && "$(CFG)" != "Test"
+!ERROR An invalid configuration is specified.
+!ENDIF
+
+# Release profile - Test suite disabled - Optimization enabled
+!IF "$(CFG)" == "Release"
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext /I ..\trunnel /I ..\ext\trunnel
+!ENDIF
+
+# Test profile - Test suite enabled - Optimization disabled
+!IF "$(CFG)" == "Test"
+CFLAGS = /nologo /MD /W3 /Od /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext /I ..\trunnel /I ..\ext\trunnel /D"TOR_UNIT_TESTS"
+!ENDIF
 
-CFLAGS = /O2 /MT /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common \
-    /I ..\ext
+all: tor.exe
 
-LIBS = ..\..\..\build-alpha\lib\libevent.lib \
- ..\..\..\build-alpha\lib\libcrypto.lib \
- ..\..\..\build-alpha\lib\libssl.lib \
- ..\..\..\build-alpha\lib\libz.lib \
+LIBS = ..\..\..\build-alpha\lib\event.lib \
+ ..\..\..\build-alpha\lib\libeay32.lib \
+ ..\..\..\build-alpha\lib\ssleay32.lib \
+ ..\..\..\build-alpha\lib\zdll.lib \
  ws2_32.lib advapi32.lib shell32.lib \
  crypt32.lib gdi32.lib user32.lib
 
+EXT_LIBS = \
+ ..\ext\csiphash.lib \
+ ..\ext\tinytest.lib \
+ ..\ext\curve25519_donna\curve25519-donna.lib \
+ ..\ext\ed25519\ref10\ed25519-ref10.lib \
+ ..\ext\keccak-tiny.lib
+
 LIBTOR_OBJECTS = \
   addressmap.obj \
   buffers.obj \
@@ -24,13 +43,13 @@
   circuituse.obj \
   command.obj \
   config.obj \
-  config_codedigest.obj \
   confparse.obj \
   connection.obj \
   connection_edge.obj \
   connection_or.obj \
   control.obj \
   cpuworker.obj \
+  dircollate.obj \
   directory.obj \
   dirserv.obj \
   dirvote.obj \
@@ -41,6 +60,7 @@
   entrynodes.obj \
   geoip.obj \
   hibernate.obj \
+  keypin.obj \
   main.obj \
   microdesc.obj \
   networkstatus.obj \
@@ -50,9 +70,11 @@
   onion_fast.obj \
   onion_ntor.obj \
   onion_tap.obj \
+  periodic.obj \
   policies.obj \
   reasons.obj \
   relay.obj \
+  rendcache.obj \
   rendclient.obj \
   rendcommon.obj \
   rendmid.obj \
@@ -60,19 +82,21 @@
   rephist.obj \
   replaycache.obj \
   router.obj \
+  routerkeys.obj \
   routerlist.obj \
   routerparse.obj \
   routerset.obj \
   scheduler.obj \
   statefile.obj \
   status.obj \
+  torcert.obj \
   transports.obj
 
 libtor.lib: $(LIBTOR_OBJECTS)
 	lib $(LIBTOR_OBJECTS) /out:$@
 
 tor.exe: libtor.lib tor_main.obj
-	$(CC) $(CFLAGS) $(LIBS) libtor.lib ..\common\*.lib ..\ext\*.lib tor_main.obj /Fe$@
+	$(CC) $(CFLAGS) $(LIBS) $(EXT_LIBS) libtor.lib ..\common\*.lib ..\trunnel\trunnel.lib tor_main.obj /Fe$@
 
 clean:
-	del $(LIBTOR_OBJECTS) tor_main.obj *.lib tor.exe
+	del $(LIBTOR_OBJECTS) tor_main.obj libtor.lib tor.exe tor.exp tor.lib
--- a/src/or/keypin.c
+++ b/src/or/keypin.c
@@ -11,6 +11,20 @@
 #define KEYPIN_PRIVATE
 
 #include "orconfig.h"
+
+#ifdef _WIN32
+#include <io.h>
+#endif
+#ifdef HAVE_UNISTD_H
+#include <unistd.h>
+#endif
+#ifdef HAVE_FCNTL_H
+#include <fcntl.h>
+#endif
+#ifdef HAVE_SYS_FCNTL_H
+#include <sys/fcntl.h>
+#endif
+
 #include "compat.h"
 #include "crypto.h"
 #include "crypto_format.h"
@@ -22,17 +36,6 @@
 #include "torlog.h"
 #include "util.h"
 #include "util_format.h"
-
-#ifdef HAVE_UNISTD_H
-#include <unistd.h>
-#endif
-#ifdef HAVE_FCNTL_H
-#include <fcntl.h>
-#endif
-
-#ifdef _WIN32
-#include <io.h>
-#endif
 
 /**
  * @file keypin.c
--- a/src/test/Makefile.nmake
+++ b/src/test/Makefile.nmake
@@ -0,0 +1,109 @@
+# Sanity check
+!IF "$(CFG)" != "Release" && "$(CFG)" != "Test"
+!ERROR An invalid configuration is specified.
+!ENDIF
+
+# Release profile - Test suite disabled - Optimization enabled
+!IF "$(CFG)" == "Release"
+all: bench.exe
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext
+!ENDIF
+
+# Test profile - Test suite enabled - Optimization disabled
+!IF "$(CFG)" == "Test"
+all: bench.exe test.exe test_bt_cl.exe test_ntor_cl.exe test-child.exe
+CFLAGS = /nologo /MD /W3 /Od /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext /I ..\trunnel /I ..\ext\trunnel /D"TOR_UNIT_TESTS"
+!ENDIF
+
+LIBS = ..\..\..\build-alpha\lib\event.lib \
+ ..\..\..\build-alpha\lib\libeay32.lib \
+ ..\..\..\build-alpha\lib\ssleay32.lib \
+ ..\..\..\build-alpha\lib\zdll.lib \
+ ws2_32.lib advapi32.lib shell32.lib \
+ crypt32.lib gdi32.lib user32.lib
+
+EXT_LIBS = \
+ ..\ext\csiphash.lib \
+ ..\ext\tinytest.lib \
+ ..\ext\curve25519_donna\curve25519-donna.lib \
+ ..\ext\ed25519\ref10\ed25519-ref10.lib \
+ ..\ext\keccak-tiny.lib
+
+TEST_OBJECTS = \
+ test.obj \
+ test_accounting.obj \
+ test_addr.obj \
+ test_address.obj \
+ test_buffers.obj \
+ test_cell_formats.obj \
+ test_cell_queue.obj \
+ test_channel.obj \
+ test_channeltls.obj \
+ test_checkdir.obj \
+ test_circuitlist.obj \
+ test_circuitmux.obj \
+ test_compat_libevent.obj \
+ test_config.obj \
+ test_connection.obj \
+ test_containers.obj \
+ test_controller.obj \
+ test_controller_events.obj \
+ test_crypto.obj \
+ test_data.obj \
+ test_dir.obj \
+ test_dir_common.obj \
+ test_dir_handle_get.obj \
+ test_dns.obj \
+ test_entryconn.obj \
+ test_entrynodes.obj \
+ test_guardfraction.obj \
+ test_extorport.obj \
+ test_hs.obj \
+ test_introduce.obj \
+ test_link_handshake.obj \
+ test_logging.obj \
+ test_keypin.obj \
+ test_microdesc.obj \
+ test_nodelist.obj \
+ test_oom.obj \
+ test_options.obj \
+ test_policy.obj \
+ test_procmon.obj \
+ test_pt.obj \
+ test_relay.obj \
+ test_relaycell.obj \
+ test_rendcache.obj \
+ test_replay.obj \
+ test_routerkeys.obj \
+ test_routerlist.obj \
+ test_routerset.obj \
+ test_scheduler.obj \
+ test_socks.obj \
+ test_status.obj \
+ test_threads.obj \
+ test_tortls.obj \
+ test_util.obj \
+ test_util_format.obj \
+ test_util_process.obj \
+ test_helpers.obj \
+ testing_common.obj \
+ log_test_helpers.obj \
+ rend_test_helpers.obj
+
+bench.exe: bench.obj
+	$(CC) $(CFLAGS) $(LIBS) $(EXT_LIBS) ..\or\libtor.lib ..\common\*.lib ..\trunnel\trunnel.lib bench.obj /Fe$@
+
+test.exe: $(TEST_OBJECTS)
+	$(CC) $(CFLAGS) $(LIBS) $(EXT_LIBS) ..\or\libtor.lib ..\common\*.lib ..\trunnel\trunnel.lib $(TEST_OBJECTS) /Fe$@
+
+test_bt_cl.exe: test_bt_cl.obj
+	$(CC) $(CFLAGS) $(LIBS) $(EXT_LIBS) ..\or\libtor.lib ..\common\*.lib ..\trunnel\trunnel.lib test_bt_cl.obj /Fe$@
+
+test_ntor_cl.exe: test_ntor_cl.obj
+	$(CC) $(CFLAGS) $(LIBS) $(EXT_LIBS) ..\or\libtor.lib ..\common\*.lib ..\trunnel\trunnel.lib test_ntor_cl.obj /Fe$@
+
+test-child.exe: test-child.obj
+	$(CC) $(CFLAGS) $(LIBS) $(EXT_LIBS) ..\or\libtor.lib ..\common\*.lib ..\trunnel\trunnel.lib test-child.obj /Fe$@
+
+clean:
+	del $(TEST_OBJECTS) *.exe *.exp *.lib *.obj
--- a/src/test/test_bt_cl.c
+++ b/src/test/test_bt_cl.c
@@ -20,6 +20,9 @@
 #ifdef __GNUC__
 #define NOINLINE __attribute__((noinline))
 #define NORETURN __attribute__((noreturn))
+#else
+#define NOINLINE
+#define NORETURN
 #endif
 
 int crash(int x) NOINLINE;
--- a/src/test/test_checkdir.c
+++ b/src/test/test_checkdir.c
@@ -3,24 +3,19 @@
 
 #include "orconfig.h"
 #include "or.h"
-
-#ifdef _WIN32
-#include <direct.h>
-#else
-#include <dirent.h>
-#endif
-
 #include "config.h"
-#include "test.h"
-#include "util.h"
 
 #ifdef _WIN32
 #define mkdir(a,b) mkdir(a)
 #define tt_int_op_nowin(a,op,b) do { (void)(a); (void)(b); } while (0)
 #define umask(mask) ((void)0)
 #else
+#include <dirent.h>
 #define tt_int_op_nowin(a,op,b) tt_int_op((a),op,(b))
 #endif
+
+#include "test.h"
+#include "util.h"
 
 /** Run unit tests for private dir permission enforcement logic. */
 static void
--- a/src/test/test_crypto.c
+++ b/src/test/test_crypto.c
@@ -2306,6 +2306,11 @@
   return -1;
 }
 
+#ifdef _MSC_VER
+#define SIZEOF_INT64_T SIZEOF___INT64
+#define int64_t __int64
+#endif
+
 /** Check crypto_rand for a failure mode where every int64_t in the buffer is
  * the same. Return 0 when the check passes, or -1 when it fails. */
 static int
--- a/src/tools/Makefile.nmake
+++ b/src/tools/Makefile.nmake
@@ -0,0 +1,30 @@
+all: tor-checkkey.exe tor-gencert.exe tor-resolve.exe
+
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext
+
+LIBS = ..\..\..\build-alpha\lib\event.lib \
+ ..\..\..\build-alpha\lib\libeay32.lib \
+ ..\..\..\build-alpha\lib\ssleay32.lib \
+ ..\..\..\build-alpha\lib\zdll.lib \
+ ws2_32.lib advapi32.lib shell32.lib \
+ crypt32.lib gdi32.lib user32.lib
+
+CRYPTO_LIBS = \
+ ..\ext\curve25519_donna\curve25519-donna.lib \
+ ..\ext\ed25519\ref10\ed25519-ref10.lib \
+ ..\ext\keccak-tiny.lib
+
+tor-checkkey.exe: tor-checkkey.obj
+	$(CC) $(CFLAGS) $(LIBS) $(CRYPTO_LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib tor-checkkey.obj /Fe$@
+
+tor-gencert.exe: tor-gencert.obj
+	$(CC) $(CFLAGS) $(LIBS) $(CRYPTO_LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib tor-gencert.obj /Fe$@
+
+tor-resolve.exe: tor-resolve.obj
+	$(CC) $(CFLAGS) $(LIBS) $(CRYPTO_LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib tor-resolve.obj /Fe$@
+
+clean:
+	del tor-checkkey.obj tor-gencert.obj tor-resolve.obj \
+		tor-checkkey.lib tor-gencert.lib tor-resolve.lib \
+		tor-checkkey.exe tor-gencert.exe tor-resolve.exe \
+		tor-checkkey.exp tor-gencert.exp
--- a/src/tools/tor-gencert.c
+++ b/src/tools/tor-gencert.c
@@ -6,6 +6,9 @@
 #include <stdio.h>
 #include <string.h>
 
+#ifdef _WIN32
+#include <io.h>
+#endif
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
--- a/src/trunnel/Makefile.nmake
+++ b/src/trunnel/Makefile.nmake
@@ -0,0 +1,21 @@
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\common /I ..\ext\trunnel
+
+all: trunnel.lib
+
+trunnel.lib: ed25519_cert.obj link_handshake.obj trunnel.obj pwbox.obj
+	lib *.obj /out:$@
+
+ed25519_cert.obj: ed25519_cert.c
+	$(CC) $(CFLAGS) /D inline=_inline /c ed25519_cert.c
+
+link_handshake.obj: link_handshake.c
+	$(CC) $(CFLAGS) /D inline=_inline /c link_handshake.c
+
+pwbox.obj: pwbox.c
+	$(CC) $(CFLAGS) /D inline=_inline /c pwbox.c
+
+trunnel.obj: ..\ext\trunnel\trunnel.c
+	$(CC) $(CFLAGS) /D inline=_inline /c ..\ext\trunnel\trunnel.c
+
+clean:
+	del *.obj *.lib
--- a/src/trunnel/pwbox.h
+++ b/src/trunnel/pwbox.h
@@ -5,7 +5,7 @@
 #ifndef TRUNNEL_PWBOX_H
 #define TRUNNEL_PWBOX_H
 
-#include <stdint.h>
+#include "torint.h"
 #include "trunnel.h"
 
 #define PWBOX0_CONST0 1414484546
--- a/src/win32/orconfig.h
+++ b/src/win32/orconfig.h
@@ -72,7 +72,7 @@
 #undef HAVE_SOCKETPAIR
 
 /* Define to 1 if you have the <stdint.h> header file. */
-#undef HAVE_STDINT_H
+#define HAVE_STDINT_H
 
 /* Define to 1 if you have the <stdlib.h> header file. */
 #define HAVE_STDLIB_H
@@ -89,6 +89,9 @@
 /* Define to 1 if you have the `strlcpy' function. */
 #undef HAVE_STRLCPY
 
+/* Define to 1 if you have the `strnlen' function. */
+#define HAVE_STRNLEN
+
 /* Define to 1 if you have the `strptime' function. */
 #undef HAVE_STRPTIME
 
@@ -244,6 +247,12 @@
 #define USE_CURVE25519_DONNA
 
 #define ENUM_VALS_ARE_SIGNED 1
+
+#define HAVE_EXTERN_ENVIRON_DECLARED
+
+#ifndef STDIN_FILENO
+#define STDIN_FILENO 0
+#endif
 
 #ifndef STDOUT_FILENO
 #define STDOUT_FILENO 1
