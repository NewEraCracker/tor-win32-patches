--- a/Makefile.nmake
+++ b/Makefile.nmake
@@ -1,19 +1,49 @@
+# Default configuration is Release
+!IF "$(CFG)" == ""
+CFG=Release
+!ENDIF
+
+# Check user supplied configuration to see if it matches any build profile
+!IF "$(CFG)" != "Release" && "$(CFG)" != "Test"
+!MESSAGE Invalid configuration "$(CFG)" specified.
+!MESSAGE
+!MESSAGE You can specify a configuration when running NMAKE by defining
+!MESSAGE the macro CFG on the command line.
+!MESSAGE
+!MESSAGE The following configurations are available:
+!MESSAGE NMAKE /f "Makefile.nmake" all CFG="Release"
+!MESSAGE NMAKE /f "Makefile.nmake" all CFG="Test"
+!MESSAGE
+!MESSAGE To clean build tree the following configurations are available:
+!MESSAGE NMAKE /f "Makefile.nmake" clean CFG="Release"
+!MESSAGE NMAKE /f "Makefile.nmake" clean CFG="Test"
+!MESSAGE
+!MESSAGE You are advised to clean your build tree before building a
+!MESSAGE different profile.
+!MESSAGE
+!ERROR An invalid configuration is specified.
+!ENDIF
+
 all:
 	cd src/common
-	$(MAKE) /F Makefile.nmake
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
 	cd ../../src/ext
-	$(MAKE) /F Makefile.nmake
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
 	cd ../../src/or
-	$(MAKE) /F Makefile.nmake
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
 	cd ../../src/test
-	$(MAKE) /F Makefile.nmake
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
+	cd ../../src/tools
+	$(MAKE) /F Makefile.nmake all CFG="$(CFG)"
 
 clean:
 	cd src/common
-	$(MAKE) /F Makefile.nmake clean
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
 	cd ../../src/ext
-	$(MAKE) /F Makefile.nmake clean
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
 	cd ../../src/or
-	$(MAKE) /F Makefile.nmake clean
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
 	cd ../../src/test
-	$(MAKE) /F Makefile.nmake clean
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
+	cd ../../src/tools
+	$(MAKE) /F Makefile.nmake clean CFG="$(CFG)"
--- a/src/common/Makefile.nmake
+++ b/src/common/Makefile.nmake
@@ -1,7 +1,19 @@
-all: libor.lib libor-crypto.lib libor-event.lib
+# Sanity check
+!IF "$(CFG)" != "Release" && "$(CFG)" != "Test"
+!ERROR An invalid configuration is specified.
+!ENDIF
+
+# Release profile - Test suite disabled - Optimization enabled
+!IF "$(CFG)" == "Release"
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext
+!ENDIF
+
+# Test profile - Test suite enabled - Optimization disabled
+!IF "$(CFG)" == "Test"
+CFLAGS = /nologo /MD /W3 /Od /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext /D"TOR_UNIT_TESTS"
+!ENDIF
 
-CFLAGS = /O2 /MT /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common \
-    /I ..\ext
+all: libor.lib libor-crypto.lib libor-event.lib
 
 LIBOR_OBJECTS = address.obj backtrace.obj compat.obj container.obj di_ops.obj \
 	log.obj memarea.obj mempool.obj procmon.obj sandbox.obj util.obj \
@@ -25,4 +37,4 @@
 	lib $(LIBOR_EVENT_OBJECTS) /out:libor-event.lib
 
 clean:
-	del *.obj *.lib libor*.lib
+	del *.obj libor.lib libor-crypto.lib libor-event.lib
--- a/src/common/backtrace.c
+++ b/src/common/backtrace.c
@@ -6,8 +6,6 @@
 
 #include "orconfig.h"
 #include "compat.h"
-#include "util.h"
-#include "torlog.h"
 
 #ifdef HAVE_EXECINFO_H
 #include <execinfo.h>
@@ -21,6 +19,9 @@
 #ifdef HAVE_SIGNAL_H
 #include <signal.h>
 #endif
+
+#include "util.h"
+#include "torlog.h"
 
 #ifdef HAVE_CYGWIN_SIGNAL_H
 #include <cygwin/signal.h>
--- a/src/common/compat.c
+++ b/src/common/compat.c
@@ -27,6 +27,7 @@
 #include "compat.h"
 
 #ifdef _WIN32
+#include <io.h>
 #include <process.h>
 #include <windows.h>
 #include <sys/locking.h>
--- a/src/common/crypto.c
+++ b/src/common/crypto.c
@@ -24,6 +24,10 @@
 #undef OCSP_RESPONSE
 #endif
 
+#ifdef _MSC_VER
+#include <openssl/applink.c>
+#endif
+
 #include <openssl/err.h>
 #include <openssl/rsa.h>
 #include <openssl/pem.h>
--- a/src/common/log.c
+++ b/src/common/log.c
@@ -15,6 +15,9 @@
 // #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#ifdef _WIN32
+#include <io.h>
+#endif
 #ifdef HAVE_SYS_TIME_H
 #include <sys/time.h>
 #endif
--- a/src/ext/Makefile.nmake
+++ b/src/ext/Makefile.nmake
@@ -0,0 +1,12 @@
+all: csiphash.lib tinytest.lib
+
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext
+
+csiphash.lib: csiphash.obj
+	lib csiphash.obj /out:csiphash.lib
+
+tinytest.lib: tinytest.obj
+	lib tinytest.obj /out:tinytest.lib
+
+clean:
+	del *.obj *.lib
--- a/src/ext/tinytest.c
+++ b/src/ext/tinytest.c
@@ -56,6 +56,10 @@
 #define __attribute__(x)
 #endif
 
+#ifdef _MSC_VER
+#define snprintf _snprintf
+#endif
+
 #include "tinytest.h"
 #include "tinytest_macros.h"
 
--- a/src/or/Makefile.nmake
+++ b/src/or/Makefile.nmake
@@ -1,12 +1,24 @@
-all: tor.exe
+# Sanity check
+!IF "$(CFG)" != "Release" && "$(CFG)" != "Test"
+!ERROR An invalid configuration is specified.
+!ENDIF
+
+# Release profile - Test suite disabled - Optimization enabled
+!IF "$(CFG)" == "Release"
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext
+!ENDIF
+
+# Test profile - Test suite enabled - Optimization disabled
+!IF "$(CFG)" == "Test"
+CFLAGS = /nologo /MD /W3 /Od /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext /D"TOR_UNIT_TESTS"
+!ENDIF
 
-CFLAGS = /O2 /MT /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common \
-    /I ..\ext
+all: tor.exe
 
-LIBS = ..\..\..\build-alpha\lib\libevent.lib \
- ..\..\..\build-alpha\lib\libcrypto.lib \
- ..\..\..\build-alpha\lib\libssl.lib \
- ..\..\..\build-alpha\lib\libz.lib \
+LIBS = ..\..\..\build-alpha\lib\event.lib \
+ ..\..\..\build-alpha\lib\libeay32.lib \
+ ..\..\..\build-alpha\lib\ssleay32.lib \
+ ..\..\..\build-alpha\lib\zdll.lib \
  ws2_32.lib advapi32.lib shell32.lib \
  crypt32.lib gdi32.lib user32.lib
 
@@ -74,4 +86,4 @@
 	$(CC) $(CFLAGS) $(LIBS) libtor.lib ..\common\*.lib ..\ext\*.lib tor_main.obj /Fe$@
 
 clean:
-	del $(LIBTOR_OBJECTS) tor_main.obj *.lib tor.exe
+	del $(LIBTOR_OBJECTS) tor_main.obj libtor.lib tor.exe tor.exp tor.lib
--- a/src/test/Makefile.nmake
+++ b/src/test/Makefile.nmake
@@ -0,0 +1,72 @@
+# Sanity check
+!IF "$(CFG)" != "Release" && "$(CFG)" != "Test"
+!ERROR An invalid configuration is specified.
+!ENDIF
+
+# Release profile - Test suite disabled - Optimization enabled
+!IF "$(CFG)" == "Release"
+all: bench.exe
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext
+!ENDIF
+
+# Test profile - Test suite enabled - Optimization disabled
+!IF "$(CFG)" == "Test"
+all: bench.exe test.exe test_bt_cl.exe test_ntor_cl.exe test-child.exe
+CFLAGS = /nologo /MD /W3 /Od /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext /D"TOR_UNIT_TESTS"
+!ENDIF
+
+LIBS = ..\..\..\build-alpha\lib\event.lib \
+ ..\..\..\build-alpha\lib\libeay32.lib \
+ ..\..\..\build-alpha\lib\ssleay32.lib \
+ ..\..\..\build-alpha\lib\zdll.lib \
+ ws2_32.lib advapi32.lib shell32.lib \
+ crypt32.lib gdi32.lib user32.lib
+
+TEST_OBJECTS = \
+ test.obj                   \
+ test_addr.obj              \
+ test_buffers.obj           \
+ test_cell_formats.obj      \
+ test_cell_queue.obj        \
+ test_circuitlist.obj       \
+ test_circuitmux.obj        \
+ test_config.obj            \
+ test_containers.obj        \
+ test_controller_events.obj \
+ test_crypto.obj            \
+ test_data.obj              \
+ test_dir.obj               \
+ test_extorport.obj         \
+ test_hs.obj                \
+ test_introduce.obj         \
+ test_logging.obj           \
+ test_microdesc.obj         \
+ test_nodelist.obj          \
+ test_oom.obj               \
+ test_options.obj           \
+ test_policy.obj            \
+ test_pt.obj                \
+ test_relaycell.obj         \
+ test_replay.obj            \
+ test_routerkeys.obj        \
+ test_socks.obj             \
+ test_status.obj            \
+ test_util.obj
+
+bench.exe: bench.obj
+	$(CC) $(CFLAGS) $(LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib bench.obj /Fe$@
+
+test.exe: $(TEST_OBJECTS)
+	$(CC) $(CFLAGS) $(LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib $(TEST_OBJECTS) /Fe$@
+
+test_bt_cl.exe: test_bt_cl.obj
+	$(CC) $(CFLAGS) $(LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib test_bt_cl.obj /Fe$@
+
+test_ntor_cl.exe: test_ntor_cl.obj
+	$(CC) $(CFLAGS) $(LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib test_ntor_cl.obj /Fe$@
+
+test-child.exe: test-child.obj
+	$(CC) $(CFLAGS) $(LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib test-child.obj /Fe$@
+
+clean:
+	del $(TEST_OBJECTS) *.exe *.exp *.lib *.obj
--- a/src/test/test_bt_cl.c
+++ b/src/test/test_bt_cl.c
@@ -18,6 +18,9 @@
 #ifdef __GNUC__
 #define NOINLINE __attribute__((noinline))
 #define NORETURN __attribute__((noreturn))
+#else
+#define NOINLINE
+#define NORETURN
 #endif
 
 int crash(int x) NOINLINE;
--- a/src/tools/Makefile.nmake
+++ b/src/tools/Makefile.nmake
@@ -0,0 +1,25 @@
+all: tor-checkkey.exe tor-gencert.exe tor-resolve.exe
+
+CFLAGS = /nologo /MD /W3 /O2 /D"_CRT_SECURE_NO_DEPRECATE" /D"_CRT_NONSTDC_NO_DEPRECATE" /I ..\win32 /I ..\..\..\build-alpha\include /I ..\common /I ..\or /I ..\ext
+
+LIBS = ..\..\..\build-alpha\lib\event.lib \
+ ..\..\..\build-alpha\lib\libeay32.lib \
+ ..\..\..\build-alpha\lib\ssleay32.lib \
+ ..\..\..\build-alpha\lib\zdll.lib \
+ ws2_32.lib advapi32.lib shell32.lib \
+ crypt32.lib gdi32.lib user32.lib
+
+tor-checkkey.exe: tor-checkkey.obj
+	$(CC) $(CFLAGS) $(LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib tor-checkkey.obj /Fe$@
+
+tor-gencert.exe: tor-gencert.obj
+	$(CC) $(CFLAGS) $(LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib tor-gencert.obj /Fe$@
+
+tor-resolve.exe: tor-resolve.obj
+	$(CC) $(CFLAGS) $(LIBS) ..\or\libtor.lib ..\common\*.lib ..\ext\*.lib tor-resolve.obj /Fe$@
+
+clean:
+	del tor-checkkey.obj tor-gencert.obj tor-resolve.obj \
+		tor-checkkey.lib tor-gencert.lib tor-resolve.lib \
+		tor-checkkey.exe tor-gencert.exe tor-resolve.exe \
+		tor-checkkey.exp tor-gencert.exp
--- a/src/win32/orconfig.h
+++ b/src/win32/orconfig.h
@@ -74,7 +74,7 @@
 #undef HAVE_SOCKETPAIR
 
 /* Define to 1 if you have the <stdint.h> header file. */
-#undef HAVE_STDINT_H
+#define HAVE_STDINT_H
 
 /* Define to 1 if you have the <stdlib.h> header file. */
 #define HAVE_STDLIB_H
@@ -98,6 +98,10 @@
 #else
 #undef HAVE_STRLCPY
 #endif
+
+/* Define to 1 if you have the `strnlen' function. */
+#define HAVE_STRNLEN
+
 /* Define to 1 if you have the `strptime' function. */
 #undef HAVE_STRPTIME
 
@@ -257,6 +261,12 @@
 #define USE_CURVE25519_DONNA
 
 #define ENUM_VALS_ARE_SIGNED 1
+
+#define HAVE_EXTERN_ENVIRON_DECLARED
+
+#ifndef STDIN_FILENO
+#define STDIN_FILENO 0
+#endif
 
 #ifndef STDOUT_FILENO
 #define STDOUT_FILENO 1
